@use './styles/variables' as v;
@use './styles/mixins' as m;
@use './styles/breakpoints' as b;

// Reset and base styles
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  font-family: v.$font-family;
  font-size: v.$font-size-normal;
  color: #333;
  background-color: v.$background-color;
}

a {
  text-decoration: none;
  color: inherit;
}

// Global layout
.app-container {
  display: flex;
  height: 100%;
  position: relative;
}

.content-container {
  flex: 1;
  overflow-x: hidden;
  background-color: v.$background-color;
  transition: margin-left 0.3s ease;
  
  @include b.respond-from(md) {
    margin-left: v.$sidebar-width;
  }
  
  &.sidebar-collapsed {
    @include b.respond-from(md) {
      margin-left: v.$sidebar-icon-width;
    }
  }
}

// Card styles
.card {
  @include m.card;
  margin-bottom: v.$spacing-md;
}

// Status colors
.status-red {
  color: v.$status-red;
}

.status-purple {
  color: v.$status-purple;
}

.status-blue {
  color: v.$status-blue;
}

.status-green {
  color: v.$status-green;
}

// Utility classes
.text-truncate {
  @include m.text-truncate;
}

.flex-center {
  @include m.flex-center;
}

.flex-between {
  @include m.flex-between;
}

.flex-column {
  @include m.flex-column;
}

// Map container
.map-container {
  width: 100%;
  height: 300px;
  border-radius: 8px;
  overflow: hidden;
  
  @include b.respond-from(md) {
    height: 800px;
  }
}

// Outage list
.outage-list {
  .outage-item {
    @include m.flex-between;
    padding: v.$spacing-md;
    border-left: 4px solid;
    margin-bottom: v.$spacing-sm;
    background-color: rgba(0, 0, 0, 0.02);
    border-radius: 4px;
    
    &:nth-child(1) {
      border-left-color: v.$status-red;
    }
    
    &:nth-child(2) {
      border-left-color: v.$status-purple;
    }
    
    &:nth-child(3) {
      border-left-color: v.$status-purple;
    }
  }
}

// Charts
.chart-container {
  height: 300px;
  margin-bottom: v.$spacing-lg;
}

// Toggle switch
.toggle-switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 20px;
  
  input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
    
    &:before {
      position: absolute;
      content: "";
      height: 16px;
      width: 16px;
      left: 2px;
      bottom: 2px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }
  }
  
  input:checked + .slider {
    background-color: v.$primary-color;
  }
  
  input:checked + .slider:before {
    transform: translateX(20px);
  }
}